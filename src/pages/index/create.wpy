<template>
  <div class="container">
    <zhezhao :show.sync="periodModelSwitch"></zhezhao>
    <div wx:if="{{step == 1}}">
<!--      根分类选项页-->
      <div class="flag-cate-line" wx:for="{{cateList}}" wx:for-index="index" wx:for-item="cateArr">
        <div wx:for="{{cateArr}}" wx:for-index="index" wx:for-item="cate" @tap="goSecond({{cate.categoryId}})">
          <div class="flag-cate-column" style="background-image: url({{cate.categoryImg}}); background-size: 100% 100%;background-repeat: no-repeat">
            <div class="remove-button" catchtap="deleteCate({{cate.categoryId}})" wx:if="{{showRemoveButton}}">
              <i class="fa fa-window-minimize"></i>
            </div>
            <span>{{cate.categoryName}}</span>
          </div>
        </div>
      </div>
    </div>
    <div wx:elif="{{step == 2}}">
      <div wx:for="{{taskList}}" class="flag-child-cate-item" @tap="goThird({{item.taskId}})">
          <div class="flag-child-cate-item-icon">
            <image src="{{item.taskImg}}"></image>
          </div>
          <div class="flag-child-cate-item-name">
            <span>{{item.taskName}}</span>
          </div>
          <div class="flag-child-cate-item-go">
            <i class="fa fa-angle-right"></i>
          </div>
      </div>
    </div>
    <div wx:else>
      <div class="picker-section">
        <div class="picker-icon">
          <i class="fa fa-calendar-check-o"></i>
        </div>
        <div class="picker" @tap="showPeriodModel">
          <span wx:if="{{weekdaySelect.length === 0}}">
            选择打卡时间
          </span>
          <span wx:else class="showPeriod">
            <span wx:for="{{weekdayNameSelect}}">
              {{[item != undefined ? item : '']}}
            </span>
          </span>
        </div>
<!--        <picker mode="multiSelector" bindchange="periodSelectorChange" bindcolumnchange="periodSelectorChange" value="{{periodSelect}}" range="{{periodSelector}}" class="picker">-->
<!--          <div wx:if="{{periodSelect[0] === 0 }}">-->
<!--            <span>每{{periodSelector[1][periodSelect[1]]}}{{periodSelector[0][periodSelect[0]]}}</span>打一次卡-->
<!--          </div>-->
<!--          <div wx:else>-->
<!--            <span>每{{periodSelector[0][periodSelect[0]]}}{{periodSelector[1][periodSelect[1]]}}</span>打一次卡-->
<!--          </div>-->
<!--        </picker>-->
        <div class="period-create" wx:if="{{periodModelSwitch}}">
          <div class="weekday-select">
            <div @tap="selectWeekday(5)" class="{{[activeWeekdayItem[5] === true ? 'weekdaySelected': '']}}">周一</div>
            <div @tap="selectWeekday(4)" class="{{[activeWeekdayItem[4] === true ? 'weekdaySelected': '']}}">周二</div>
            <div @tap="selectWeekday(3)" class="{{[activeWeekdayItem[3] === true ? 'weekdaySelected': '']}}">周三</div>
            <div @tap="selectWeekday(2)" class="{{[activeWeekdayItem[2] === true ? 'weekdaySelected': '']}}">周四</div>
            <div @tap="selectWeekday(1)" class="{{[activeWeekdayItem[1] === true ? 'weekdaySelected': '']}}">周五</div>
            <div @tap="selectWeekday(0)" class="{{[activeWeekdayItem[0] === true ? 'weekdaySelected': '']}}">周六</div>
            <div @tap="selectWeekday(6)" class="{{[activeWeekdayItem[6] === true ? 'weekdaySelected': '']}}">周日</div>
          </div>
          <div style="clear: both"></div>
          <div class="check-num-select">
          </div>
          <div class="operate-menu">
            <button type="primary" @tap="submitPeriod(1)">确定</button>
            <button type="warn" @tap="submitPeriod(0)">取消</button>
          </div>
        </div>
      </div>
      <div class="picker-section">
        <div class="picker-icon">
          <i class="fa fa-hourglass-half"></i>
        </div>
        <picker mode="multiSelector" bindcolumnchange="taskSelectChange" value="{{taskSelect}}" range="{{taskSelector}}" class="picker">
          <span>任务量: </span><span>{{taskSelector[0][taskSelect[0]]}}{{taskSelector[1][taskSelect[1]]}}</span>
        </picker>
      </div>
      <div class="picker-section">
        <div class="picker-icon">
          <i class="fa fa-trophy"></i>
        </div>
        <picker bindchange="selectCheckTimes" value="{{checkTimesSelect - 1}}" range="{{taskSelector[0]}}" class="picker">
          <span>目标打卡: </span><span>{{checkTimesSelect}}次</span>
        </picker>
      </div>
      <div class="picker-section">
        <div class="picker-icon">
          <i class="fa fa-flag-o"></i>
        </div>
        <div class="flag-task-show">
          <span>任务</span>
          <span>
            {{flagInfo.taskInfo.taskName}}{{taskSelector[0][flagInfo.task[0]]}}{{taskSelector[1][flagInfo.task[1]]}}
          </span>
        </div>
      </div>
      <button type="primary"
              class="flag-create"
              plain="{{true}}"
              @tap="submitFlag">
        立下FLAG
      </button>
    </div>
    <div class="add-button" wx:if="{{step === 1 || step === 2}}">
      <div wx:if="{{showRemoveButton}}" @tap="removeOrAddButton">
        <i class="fa fa-check"></i>
      </div>
      <div wx:else @tap="remove">
        <i class="fa fa-plus-square-o"></i>
      </div>
    </div>
  </div>
</template>
<style>
  .container {
    width: 100%;
    height: 100%;
    position: fixed;
    background-color: #f7f7f7;
  }
  .flag-cate-line {
    width: 100%;
    height: 150rpx;
    /*background-color: #FFFFFF;*/
    margin: 30rpx auto 0 auto;
  }
  .flag-cate-column {
    width: 124rpx;
    height: 124rpx;
    border-radius: 124rpx;
    border: 1rpx solid #00c7cc;
    background: #FFFFFF;
    margin-top: 13rpx;
    float: left;
    margin-left: 23rpx;
    font-size: 14px;
    color: #FFFFFF;
    text-align: center;
    line-height: 124rpx;
    font-weight: bolder;
    position: relative;
  }
  .flag-child-cate-item {
    width: 98%;
    height: 120rpx;
    margin: 15rpx auto 0 auto;
    background-color: #FFFFFF;
    overflow: hidden;
    position: relative;
  }
  .flag-child-cate-item div {
    position: absolute;
    /*float: left;*/
  }
  .flag-child-cate-item-icon {
    width: 90rpx;
    height: 90rpx;
    top: 15rpx;
    left: 10rpx;
    background-color: #00c7cc;
    border-radius: 90rpx;
    overflow: hidden;
  }
  .flag-child-cate-item-icon image {
    width: 100%;
    height: 100%;
  }
  .flag-child-cate-item-name {
    left: 120rpx;
    width: 450rpx;
    height: 100rpx;
    top: 12rpx;
    text-align: left;
    line-height: 100rpx;
    font-size: 18px;
    color: #666666;
  }
  .flag-child-cate-item-go {
    float: right;
    right: 25rpx;
    width: 30rpx;
    height: 30rpx;
    top: 35rpx;
    text-align: center;
    line-height: 30rpx;
    color: #cdcdcd;
    font-size: 22px;
  }
  .picker-section {
    width: 97%;
    height: 126rpx;
    margin-top: 25rpx;
    margin-left: auto;
    margin-right: auto;
    border: 1rpx solid #00c7cc;
    position: relative;
    border-radius: 20rpx;
  }
  .picker-icon {
    width: 90rpx;
    height: 90rpx;
    border-radius: 90rpx;
    background-color: #00c7cc;
    position: absolute;
    top: 18rpx;
    left: 15rpx;
    text-align: center;
    line-height: 90rpx;
    font-size: 25px;
    color: #FFFFFF;
  }
  .picker {
    width: 700rpx;
    height: 126rpx;
    position: absolute;
    left: 125rpx;
    line-height: 126rpx;
    color: #4F4F4F;
  }
  .flag-create {
    margin-top: 100rpx;
    width: 80%;
    height: 100rpx;
    line-height: 100rpx;
    border-radius: 10rpx;
    font-size: 18px;
    margin-left: auto;
    margin-right: auto;
    background-color: #00c7cc;
  }
  .flag-task-show {
    font-size: 16px;
    color: #777777;
    left: 125rpx;
    position: absolute;
    line-height: 126rpx;
  }
  .period-create {
    background-color: #fcfcfc;
    border: 1rpx solid #efefef;
    border-radius: 15rpx;
    width: 700rpx;
    height: 400rpx;
    position: absolute;
    margin: auto;
    top: 200rpx;
    left: 0;
    right: 0;
    z-index: 999;
    animation: fromTop 500ms;
  }
  @keyframes fromTop {
    from {
      top: -1000rpx;
    }
    to {
      top: 200rpx;
    }
  }
  .weekday-select div {
    width: 110rpx;
    margin-left: 19rpx;
    margin-right: 10rpx;
    margin-top: 35rpx;
    height: 70rpx;
    background: #FFFFFF;
    float: left;
    border: 1rpx solid #cccccc;
    text-align: center;
    line-height: 70rpx;
    border-radius: 10rpx;
  }
  .operate-menu button {
    width: 30%;
    margin-top: 77rpx;
    text-align: center;
    line-height: 95rpx;
    display: block;
    height: 95rpx;
    float: left;
    margin-left: 10%;
    margin-right: 10%;
  }
  .weekday-select .weekdaySelected {
    background-color: #00c7cc;
    color:  #FFFFFF;
  }
  .showPeriod {
    font-size: 12px;
  }
  .add-button {
    width: 100rpx;
    height: 100rpx;
    position: fixed;
    bottom: 245rpx;
    left: 0;
    right: 0;
    margin: auto;
    border: 1rpx solid #dddddd;
    border-radius: 100rpx;
    line-height: 100rpx;
    text-align: center;
    font-size: 30px;
    color: #aaaaaa;
  }
  .remove-button {
    width: 40rpx;
    height: 40rpx;
    background-color: red;
    position: absolute;
    border-radius: 45rpx;
    overflow: hidden;
    right: -10rpx;
    color: #FFFFFF;
    font-size: 12px;
    line-height: 28rpx;
    text-align: center;
  }
</style>

<config>

</config>
<script>
  import wepy from 'wepy'
  import api from '../../comm/api'
  import zhezhao from '../../components/zhezhao'
  
  const STEP_ROOT = 1
  const STEP_CHILD = 2
  const STEP_FORM = 3
  
  const CATE_ALL_CACHE_KEY = 'all_category_cache_key'
  
  const TASK_UNIT_ALL = [
    'i',
    'h',
    'g',
    'z'
  ]
  const WEEK_NAME = [
    '星期日',
    '星期一',
    '星期二',
    '星期三',
    '星期四',
    '星期五',
    '星期六'
  ]
  
  export default class create extends wepy.page {
    config = {
      navigationBarBackgroundColor: '#00c7cc',
      navigationBarTextStyle: 'white',
      navigationBarTitleText: ''
    }
    components = {
      zhezhao: zhezhao
    }
    data = {
      periodModelSwitch: false,
      showRemoveButton: false,
      weekdaySelect: [],
      weekdayNameSelect: [],
      activeWeekdayItem: [
        false, false, false, false, false, false, false
      ],
      cateList: [],
      flagInfo: {},
      isRoot: true,
      step: STEP_ROOT,
      taskList : [],
      taskSelect: [0,0],
      taskSelector: [
        [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
        ['分钟','小时', '个', '组']
      ],
      checkTimesSelect: 1
    }
    onLoad(options) {
      this.isRoot = options.id == undefined ? true : false
      let self = this
      let cacheData = wx.getStorageSync(CATE_ALL_CACHE_KEY)
      if (cacheData === '') {
        wx.request({
          url: api.taskList,
          methods: "GET",
          success(res) {
            if (res.statusCode === 200 && res.data.code === 0) {
              self.cateList = res.data.data
              wx.setStorage({
                key: CATE_ALL_CACHE_KEY,
                data: res.data.data
              })
              self.$apply();
            }
          }
        })
      } else {
        this.cateList = cacheData
        console.log(cacheData)
        this.$apply()
      }
    }
    methods = {
      goSecond(id) {
        let got = false
        for (let i = 0; i < this.cateList.length; i ++) {
          for (let j = 0; j < this.cateList[i].length; j ++) {
            if (id === this.cateList[i][j].categoryId) {
              this.flagInfo.cateInfo = this.cateList[i][j]
              this.taskList = this.cateList[i][j].task
              this.$apply()
              got = true
              break
            }
          }
          if (got === true) {
            break
          }
        }
        this.step = STEP_CHILD
      },
      goThird(id) {
        for (let i = 0; i < this.taskList.length; i ++) {
          if (id === this.taskList[i].taskId) {
            this.flagInfo.taskInfo = this.taskList[i]
            break
          }
        }
        this.flagInfo.period = this.periodSelect
        this.flagInfo.task = this.taskSelect
        this.step = STEP_FORM
      },
      periodSelectorChange(value) {
        let chandeDetail = value.detail
        let column = chandeDetail.column
        let line = chandeDetail.value
        console.log(column, line)
        if (column === 0 && line < this.periodSelector[0].length) {
          this.periodSelector[column + 1] = this.periodAll[column][line]
          this.periodSelect[column + 1] = 0
        }
        this.periodSelect[column] = line
        this.flagInfo.period = this.periodSelect
      },
      taskSelectChange(value) {
        let chandeDetail = value.detail
        let column = chandeDetail.column
        let line = chandeDetail.value
        this.taskSelect[column] = line
        this.flagInfo.task = this.taskSelect
      },
      submitFlag() {
        let self = this
        let period = this.weekdaySelect
        let taskSize = ++this.flagInfo.task[0]
        let taskSizeUnitNum = this.flagInfo.task[1]
        let taskSizeUnit = TASK_UNIT_ALL[taskSizeUnitNum]
        let periodNum = 0
        for (let i = 0; i < period.length; i ++) {
          let n = Math.abs(period[i])
          periodNum += Math.pow(2, n)
        }
        let postFlag = {
          categoryId: this.flagInfo.cateInfo.categoryId,
          taskId: this.flagInfo.taskInfo.taskId,
          period: periodNum,
          taskSize: taskSize,
          taskSizeUnit: taskSizeUnit,
          destCheckNum : this.checkTimesSelect
        }
        wx.showLoading();
        wx.request({
          url: api.addFlag,
          method: 'POST',
          data: postFlag,
          success(res) {
            wx.hideLoading()
            if (res.statusCode === 200 && res.data.code === 0) {
              wx.showToast({
                title: '添加成功',
                icon: 'success',
                duration: 3000
              })
              self.$parent.globalData.pageData.flag.refresh = true
              setTimeout(function () {
                wx.switchTab({
                  url: 'flag',
                  success() {
                    wx.hideToast()
                  }
                })
              }, 1000)
            }
          },
          fail() {
            wx.hideLoading()
            wx.showToast({
              icon: 'none',
              title: '网络错误'
            })
          }
        })
        //console.log(this.flagInfo)
      },
      showPeriodModel() {
        this.periodModelSwitch = !this.periodModelSwitch
      },
      submitPeriod(type) {
        this.periodModelSwitch = !this.periodModelSwitch
        let buttonType = +type
        if (buttonType === 0) {
          this.weekdaySelect = []
          this.weekdayNameSelect = []
          this.activeWeekdayItem = [
            false, false, false, false, false, false, false
          ]
        }
        this.$apply()
      },
      selectWeekday(weekday) {
        let index = this.weekdaySelect.indexOf(weekday)
        if (index < 0) {
          this.weekdaySelect.push(weekday)
          this.weekdaySelect.sort()
          this.weekdayNameSelect[Math.abs(weekday - 6)] = WEEK_NAME[Math.abs(weekday - 6)]
        } else {
          this.weekdayNameSelect[Math.abs(this.weekdaySelect[index] - 6)] = undefined
          this.weekdaySelect.splice(index, 1)
        }
        console.log(this.weekdayNameSelect)
        this.activeWeekdayItem[weekday] = !this.activeWeekdayItem[weekday]
      },
      remove () {
        this.showRemoveButton = true
      },
      deleteCate (cateId, event) {
        console.log(cateId)
        wx.request({
          url: api.cateRemove,
          method: "POST",
          data: {
            cateId: cateId
          },
          success() {
          },
          fail() {
          }
        })
      },
      removeOrAddButton() {
        console.log(this.showRemoveButton)
        if (this.showRemoveButton) {
          this.showRemoveButton = false
          return null
        } else {
        
        }
      },
      selectCheckTimes(value) {
        let index = +value.detail.value
        this.checkTimesSelect = index + 1
      }
    }
  }
</script>

