<template>
  <div class="container">
    <div class="show-day" wx:if="{{timeInfo.day != 0}}">
      <span class="bold-day-num">{{timeInfo.day}}</span>
      天
    </div>
    <div class="create-button">
      <div class="show-year">
<!--        <p>{{timeInfo.year+'年'+timeInfo.month+'月'+timeInfo.day+'天'}}</p><br/>-->
      </div>
      <navigator url="/pages/index/create">
        <div class="create-real-button">
          <p>{{timeInfo.hour+'小时'+timeInfo.minute+'分'+timeInfo.second+'秒'}}</p>
        </div>
      </navigator>
      <div class="bolang b1 bolang1"></div>
      <div class="bolang b2 bolang2"></div>
      <div class="bolang b3 bolang3"></div>
      <div class="bolang b4 bolang4"></div>
    </div>
    <div class="help">
      <span>点击按钮以创建里程碑</span>
    </div>
    <div class="setting-icon" @tap="setStartTime">
      <i class="fa fa-gear"></i>
    </div>
    <showModel :show.sync="showCreateModel" :msg.sync="msg"></showModel>
  </div>
</template>

<style scoped>
  .create-button {
    position: fixed;
    width: 100%;
    height: 100%;
    background-color: #fcfcfc;
  }
  .create-real-button {
    font-size: 16px;
    width: 275rpx;
    height: 275rpx;
    border-radius: 450rpx;
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #00c7cc;
    text-align: center;
    line-height: 275rpx;
    z-index: 999;
    color: #FFFFFF;
  }
  .show-year {
    text-align: center;
    background-color: #00c7cc;
    padding: 10rpx;
    color: #FFFFFF;
    font-size: 18px;
  }
  .b1 {
    width: 300rpx;
    height: 300rpx;
    border-radius: 400rpx;
  }
  .b2 {
    width: 350rpx;
    height: 350rpx;
    border-radius: 500rpx;
  }
  .b3 {
    width: 425rpx;
    height: 425rpx;
    border-radius: 500rpx;
  }
  .b4 {
    width: 450rpx;
    height: 450rpx;
    border-radius: 500rpx;
  }
  .bolang {
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #00c7cc;
    text-align: center;
    line-height: 300rpx;
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang1 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang2 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang3 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang4 {
    animation: bolang 900ms linear infinite alternate;
  }
  
  .setting-icon {
    position: fixed;
    left: 85%;
    top: 5%;
    width: 100rpx;
    height: 100rpx;
    line-height: 100rpx;
    text-align: center;
    font-size: 25px;
    color: #bcbcbc;
  }
  .help {
    position: fixed;
    width: 100%;
    text-align: center;
    height: 10rpx;
    margin: auto;
    top: 35%;
    bottom: 0;
    left: 0;
    right: 0;
    color: #bbbbbb;
    font-size: 25rpx;
  }
  .show-day {
    position: fixed;
    width: 100%;
    text-align: center;
    font-size: 12px;
    z-index: 1000;
    top: 20%;
  }
  .bold-day-num {
    font-size: 50px;
    color:  #00c7cc;
  }
</style>

<config>

</config>
<script>
    import wepy from 'wepy'
    import showModel from '../../components/show-model'
    const TIMER_PERIOD_STORAGE_KEY = 'the_period_of_timer';
    const TIMER_NEXT_DATE_KEY = 'the_next_date';
    const month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    
    export default class index extends wepy.page {
      config = {
        navigationBarBackgroundColor: '#00c7cc',
        navigationBarTextStyle: 'white',
        navigationBarTitleText: '里程碑计时器'
      }
      components = {
        showModel: showModel
      }
      data = {
        birthday: '1994-10-13 00:18:56',
        lastTime: 0,
        timeInfo: {
          allSecondsLeft: 0,
          day: 0,
          hour: 0,
          minute: 0,
          second: 0
        },
        showCreateModel: false
      }
      onReady() {
        this.asyncTime(this)
        wx.authorize({
          scope: "scope.werun",
          success() {
            wx.getWeRunData({
              success(data) {
                console.log(data)
              }
            })
          }
        })
      }
      asyncTime(self) {
        let nextDateCache = wx.getStorageSync(TIMER_NEXT_DATE_KEY)
        let now = new Date()
        if (nextDateCache === '') {
          var nextDate = new Date()
          nextDate.setDate(now.getDate() + 1)
        } else {
          var nextDate = new Date(nextDateCache)
        }
        let diffMillionSecond = nextDate.getTime() - now.getTime()
        let second = diffMillionSecond / 1000
        second = second.toFixed()
        self.timeInfo.allSecondsLeft = second
        setInterval(function (self) {
          let secLeft = 0
          let minLeft = 0
          let hourLeft = 0
          let day = 0
          let second = self.timeInfo.allSecondsLeft
          secLeft = second % 60
          let min = ((second - secLeft) / 60).toFixed()
          minLeft = (min % 60).toFixed()
          let hour = ((min - minLeft) / 60).toFixed()
          hourLeft = (hour % 24).toFixed()
          day = ((hour - hourLeft) / 24).toFixed()
          self.timeInfo.allSecondsLeft --
          self.timeInfo.day = day
          self.timeInfo.hour = hourLeft
          self.timeInfo.minute = minLeft
          self.timeInfo.second = secLeft
          self.$apply()
        }, 1000, self)
      }
      methods = {
        setStartTime() {
          this.showCreateModel = !this.showCreateModel
        }
      }
    }
</script>


