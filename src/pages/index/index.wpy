<template>
  <div class="container">
    <div class="create-button">
      <div class="show-year">
        <p>{{timeInfo.year+'年'+timeInfo.month+'月'+timeInfo.day+'天'}}</p><br/>
      </div>
      <navigator url="/pages/index/create">
        <div class="create-real-button">
          <p>{{timeInfo.hour+'小时'+timeInfo.minute+'分'+timeInfo.second+'秒'}}</p>
        </div>
      </navigator>
      <div class="bolang b1 bolang1"></div>
      <div class="bolang b2 bolang2"></div>
      <div class="bolang b3 bolang3"></div>
      <div class="bolang b4 bolang4"></div>
    </div>
    <div class="setting-icon" @tap="setStartTime">
      <i class="fa fa-gear"></i>
    </div>
    <showModel :show.sync="showCreateModel" :msg.sync="msg"></showModel>
  </div>
</template>

<style scoped>
  .create-button {
    position: fixed;
    width: 100%;
    height: 100%;
    background-color: #fcfcfc;
  }
  .create-real-button {
    font-size: 16px;
    width: 275rpx;
    height: 275rpx;
    border-radius: 450rpx;
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #00c7cc;
    text-align: center;
    line-height: 275rpx;
    z-index: 999;
    color: #FFFFFF;
  }
  .show-year {
    text-align: center;
    background-color: #00c7cc;
    padding: 10rpx;
    color: #FFFFFF;
    font-size: 18px;
  }
  .b1 {
    width: 300rpx;
    height: 300rpx;
    border-radius: 400rpx;
  }
  .b2 {
    width: 350rpx;
    height: 350rpx;
    border-radius: 500rpx;
  }
  .b3 {
    width: 425rpx;
    height: 425rpx;
    border-radius: 500rpx;
  }
  .b4 {
    width: 450rpx;
    height: 450rpx;
    border-radius: 500rpx;
  }
  .bolang {
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #00c7cc;
    text-align: center;
    line-height: 300rpx;
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang1 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang2 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang3 {
    animation: bolang 900ms linear infinite alternate;
  }
  .bolang4 {
    animation: bolang 900ms linear infinite alternate;
  }
  
  .setting-icon {
    position: fixed;
    left: 83%;
    top: 95rpx;
    width: 100rpx;
    height: 100rpx;
    line-height: 100rpx;
    text-align: center;
    font-size: 35px;
    color: #999999;
  }
</style>

<config>

</config>
<script>
    import wepy from 'wepy'
    import showModel from '../../components/show-model'
    import log from '../../lib/log'


    const month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    export default class index extends wepy.page {
      config = {
        navigationBarBackgroundColor: '#00c7cc',
        navigationBarTextStyle: 'white',
        navigationBarTitleText: '里程碑计时器'
      }
      components = {
        showModel: showModel
      }
      data = {
        birthday: '1994-10-13 00:18:56',
        lastTime: 0,
        timeInfo: {
          year: 0,
          month: 0,
          day: 0,
          hour: 0,
          minute: 0,
          second: 0
        },
        showCreateModel: false
      }
      onReady() {
        let formatDate = this.birthday.replace('/-/g', '/')
        let birthdayDate = new Date(formatDate)
        let timestamp = birthdayDate.getTime()
        let nowDate = new Date()
        let lastTime = parseInt(((nowDate.getTime()) - timestamp) / 1000)
        this.lastTime = lastTime
        let timeInfo = this.calTimeInfo(birthdayDate, nowDate)
        this.timeInfo = timeInfo
        this.$apply()
        log.debug('1231231231')
        log.info('sfwfgwrgfegret')
      }
      /** */
      calTimeInfo(timeOrigin, timeNow) {
        let nowYear = timeNow.getFullYear()
        let originYear = timeOrigin.getFullYear()
        let nowMonth = timeNow.getMonth()
        let originMonth = timeOrigin.getMonth()
        let nowDay = timeNow.getDay()
        let originDay = timeOrigin.getDay()
        let nowHour = timeNow.getHours()
        let originHour = timeOrigin.getHours()
        let nowMinute = timeNow.getMinutes()
        let originMinute = timeOrigin.getMinutes()
        let nowSecond = timeNow.getSeconds()
        let originSecond = timeOrigin.getSeconds()
        console.log(nowMonth)
        let diffYear = nowYear - originYear
        let diffMonth = nowMonth - originMonth
        let diffDay = nowDay - originDay
        let diffHour = nowHour - originHour
        let diffMinute = nowMinute - originMinute
        let diffSecond = nowSecond - originSecond
        
        if (diffMonth <= 0) {
          diffMonth += 12
          diffYear --
        }
        if (diffDay <= 0) {
          diffMonth --
          let monthDay = month[nowMonth]
          if (nowYear / 4 === 0 && nowMonth === 1) {
            monthDay = 29
          }
          diffDay += monthDay
        }
        if (diffHour <= 0) {
          diffDay --
          diffHour += 24
        }
        if (diffMinute <= 0) {
          diffHour --
          diffMinute += 60
        }
        if (diffSecond <= 0) {
          diffMinute --
          diffSecond += 60
        }
        return {
          year: diffYear,
          month: diffMonth,
          day: diffDay,
          hour: diffHour,
          minute: diffMinute,
          second: diffSecond
        }
      }
      asyncTime(self) {
        setInterval(function (self) {
          let nowDate = new Date()
          let nowMonth = nowDate.getMonth()
          let nowYear = nowDate.getFullYear()
          let step = 1
          let timeInfo = self.timeInfo
          if (step > 60) {
            return false
          }
          timeInfo.second += step
          if (timeInfo.second >= 60) {
            timeInfo.minute ++
            timeInfo.second -= 60
          }
          if (timeInfo.minute > 60) {
            timeInfo.hour ++
            timeInfo.minute -= 60
          }
          if (timeInfo.hour > 24) {
            timeInfo.day ++
            timeInfo.hour -= 24
          }
          let monthDay = month[nowMonth]
          if (nowYear / 4 === 0 && nowMonth === 1) {
            monthDay = 29
          }
          if (timeInfo.day > monthDay) {
            timeInfo.month ++
            timeInfo.day -= monthDay
          }
          if (timeInfo.month > 12) {
            timeInfo.year ++
            timeInfo.month -= 12
          }
          self.timeInfo = timeInfo
          self.$apply()
        }, 1000, self)
      }
      methods = {
        setStartTime() {
          this.showCreateModel = !this.showCreateModel
          console.log(log)
          console.log(wx.getRealtimeLogManager())
          log.error("set setting time debug debug debug")
        }
      }
    }
</script>


