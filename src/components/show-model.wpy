<template>
  <div class="create-form-model" wx:if="{{showModelSwitch ^ show}}">
    <div class="close-model" @tap="closeModel">
      <i class="fa fa-times"></i>
    </div>
    <div class="timer-type">
      <div class="type-item">
        <span>选择倒计时:</span>
      </div>
      <div class="type-item select-item {{[selectType === 'fixed' ? 'active' : '']}}" @tap="changeType(0)">
        <i class="fa fa-cube"></i>
        <span>固定周期</span>
      </div>
      <div class="type-item select-item {{[selectType === 'date' ? 'active' : '']}}" @tap="changeType(1)">
        <i class="fa fa-calendar-o"></i>
        <span>日期倒计时</span>
      </div>
    </div>
    <div style="clear: both;"></div>
    <div class="timer-value">
      <div class="period-select" wx:if="{{selectType === 'fixed'}}">
        <div class="period-item {{[ periodActive[0] ? 'active' : '' ]}}" @tap="selectPeriod(0)">
          日
        </div>
        <div class="period-item {{[ periodActive[1] ? 'active' : '' ]}}" @tap="selectPeriod(1)">
          周
        </div>
        <div class="period-item {{[ periodActive[2] ? 'active' : '' ]}}" @tap="selectPeriod(2)">
          月
        </div>
        <div class="period-item {{[ periodActive[3] ? 'active' : '' ]}}" @tap="selectPeriod(3)">
          年
        </div>
      </div>
      <div wx:else class="date-select">
        <picker mode="date" value="{{date}}" bindchange="bindDateChange">
          <div class="picker">
             <i class="fa fa-calendar date-icon"></i>{{date}}
          </div>
        </picker>
      </div>
    </div>
  </div>
</template>
<style lang="less">
  .create-form-model {
    width: 500rpx;
    height: 400rpx;
    margin: auto;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    animation: zoom 500ms;
    overflow: hidden;
    border: 1rpx solid #eaeaea;
    background-color: #FFFFFF;
    border-radius: 25rpx;
    position: fixed;
  }
  .close-model {
    width: 50rpx;
    height: 50rpx;
    margin-left: 450rpx;
    margin-top: 5rpx;
    color: #AAAAAA;
    font-size: 20px;
  }
  .type-item {
    width: 141rpx;
    height: 50rpx;
    float: left;
    margin-top: 52rpx;
    margin-right: 16rpx;
    margin-left: 9rpx;
    overflow: hidden;
    font-size: 25rpx;
    text-align: center;
    line-height: 50rpx;
  }
  .select-item {
    color: #555555;
    border: 1rpx solid #cccccc;
    border-radius: 10rpx;
  }
  .period-select {
  
  }
  .period-item {
    float: left;
    width: 100rpx;
    height: 50rpx;
    border: 1rpx solid #dfdfdf;
    margin-top: 70rpx;
    margin-left: 19rpx;
    text-align: center;
    color: #777777;
    font-size: 28rpx;
    border-radius: 10rpx;
    line-height: 50rpx;
  }
  @keyframes zoom {
    from {
      width: 500rpx;
      height: 0;
      /*transform: rotate(0deg);*/
    }
    to {
      width: 500rpx;
      height: 400rpx;
      /*transform: rotate(360deg);*/
    }
  }
  .date-select {
    margin-top: 70rpx;
    width: 50%;
    margin-bottom: 0;
    margin-left: auto;
    margin-right: auto;
  }
  .date-icon {
    font-size: 16px;
    color: #00c7cc;
    margin-right: 40rpx;
  }
  .picker {
    color: #777777;
    font-size: 28rpx;
  }
  .active {
    border: 3rpx solid #00c7cc;
    color: #00c7cc;
  }
</style>
<script>
  import wepy from 'wepy'
  const TYPE_FIXED = 'fixed'
  const TYPE_DATE = 'date'
  const TIMER_PERIOD_STORAGE_KEY = 'the_period_of_timer';
  const TIMER_NEXT_DATE_KEY = 'the_next_date';
  const MONTH_DAY_NUM = [31,28,31,30,31,30,31,31,30,31,30,31]

  export default class showModel extends wepy.component {
    data = {
      showModelSwitch: this.show,
      selectType: TYPE_FIXED,
      periodActive: [false,false,false,false],
      periodActiveDefault: [false,false,false,false],
      date: null,
      time: null,
      start: null
    }
    props = {
      show: Boolean,
      msg: String
    }

    events = {
    
    }

    methods = {
      bindDateChange (e) {
        let date = e.detail.value
        this.date = date
        date = date.replace(/-/g, '/')
        let today = this.today()
        if (date <= today) {
          wx.showToast({
            title: '时间选择错误',
            icon: 'none'
          })
          return
        }
        wx.setStorage({
          key: TIMER_NEXT_DATE_KEY,
          data: date
        })
        wx.showToast({
          title: '设置成功',
          icon: 'success'
        })
        this.$parent.data.timeInfo.allSecondsLeft = this.calDiffSecond(date)
        this.showModelSwitch = !this.showModelSwitch
      },
      closeModel() {
        this.showModelSwitch = !this.showModelSwitch
      },
      changeType(type) {
        if (+type === 0) {
          this.selectType = TYPE_FIXED
        } else {
          this.selectType = TYPE_DATE
        }
      },
      selectPeriod(period) {
        this.periodActive = [false, false, false, false]
        this.periodActive[+period] = !this.periodActive[+period]
        wx.setStorage({
          key: TIMER_PERIOD_STORAGE_KEY,
          data: period
        })
        let diffNextDate = 0
        let date = new Date()
        if (+period === 3) {
          let year = date.getFullYear() + 1
          let nextDate = year.toString() + '/01/01'
          wx.setStorage({
            key: TIMER_NEXT_DATE_KEY,
            data: nextDate
          })
          wx.showToast({
            title: '设置成功',
            icon: 'success'
          })
          this.$parent.data.timeInfo.allSecondsLeft = this.calDiffSecond(nextDate)
          this.showModelSwitch = !this.showModelSwitch
          return
        }
        switch (+period) {
          case 0:
            diffNextDate = 1
            break
          case 1:
            let todayWeek = date.getDay()
            diffNextDate = 7 - todayWeek + 1
            break
          case 2:
            let month = date.getMonth()
            let thisMonthDayNum = MONTH_DAY_NUM[month]
            if (date.getFullYear() % 4 === 0 && +month === 1) {
              thisMonthDayNum ++
            }
            diffNextDate = thisMonthDayNum - date.getDate() + 1
            break
          default:
            return
            
        }
        date.setDate(date.getDate() + diffNextDate)
        let nextDate = date.getFullYear() + '/' + (+date.getMonth() + 1) + '/' + date.getDate()
        wx.setStorage({
          key: TIMER_NEXT_DATE_KEY,
          data: nextDate
        })
        wx.showToast({
          title: '设置成功',
          icon: 'success'
        })
        this.date = this.today()
        this.$parent.data.timeInfo.allSecondsLeft = this.calDiffSecond(nextDate)
        this.showModelSwitch = !this.showModelSwitch
      }
    }

    onLoad () {
      let period = wx.getStorageSync(TIMER_PERIOD_STORAGE_KEY)
      if (period !== '') {
        this.periodActive[+period] = true
      }
      this.date = this.today()
      console.log(this.$parent.data)
    }
    
    today () {
      let today = new Date()
      let day = today.getDate()
      if (day < 10) {
        day = '0' + day
      }
      return today.getFullYear() + '/' + (+today.getMonth() + 1) + '/' + day
    }
    
    calDiffSecond (date) {
      let today = new Date()
      let next = new Date(date)
      let diffSec = (next.getTime() - today.getTime()) / 1000
      return diffSec.toFixed()
    }
  }
</script>
